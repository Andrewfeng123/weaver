; -m total-progress-context-opt -b rr
(var i1 i2 N1 N2 counter1 Int)
(var j1 j2 M1 M2 counter2 Int)
(use
false
true
(<= M1 j1)
(<= M2 j2)
(<= counter1 0)
(<= counter2 0)
(<= i1 j1)
(<= i1 0)
(<= i2 j2)
(<= i2 0)
(<= j1 i1)
(<= j2 i2)
(<= 0 counter1)
(<= 0 counter2)
(<= 0 i1)
(<= 0 i2)
(<= 0 (+ N1 (+ (* (- 1) M1) (+ (* (- 1) i1) j1))))
(<= 0 (+ N2 (+ (* (- 1) M2) (+ j2 (* (- 1) i2)))))
(<= 0 (+ i1 (+ (* (- 1) j1) (+ (* (- 1) N1) M1))))
(<= 0 (+ i2 (+ (* (- 1) j2) (+ (* (- 1) N2) M2))))
(<= 1 counter1)
(<= 1 counter2)
(<= 1 (+ M1 (* (- 1) j1)))
(<= 1 (+ M2 (* (- 1) j2)))
(<= (+ N1 (+ (* (- 1) M1) (+ (* (- 1) i1) j1))) 0)
(<= (+ N2 (+ (* (- 1) M2) (+ j2 (* (- 1) i2)))) 0)
(<= (+ i1 (+ (* (- 1) j1) (+ (* (- 1) N1) M1))) 0)
(<= (+ i2 (+ (* (- 1) j2) (+ (* (- 1) N2) M2))) 0)
(<= (+ j1 (* (- 1) M1)) (- 1))
(<= (+ j1 (+ N1 (+ (* (- 1) M1) (* (- 1) i1)))) (- 1))
(<= (+ j2 (* (- 1) M2)) (- 1))
(<= (+ j2 (+ N2 (+ (* (- 1) M2) (* (- 1) i2)))) (- 1))
(<= (- 1) (+ j1 (+ N1 (+ (* (- 1) M1) (* (- 1) i1)))))
(<= (- 1) (+ j2 (+ N2 (+ (* (- 1) M2) (* (- 1) i2)))))
(= counter1 counter2)
(= counter1 0)
(and (<= counter1 0) (<= counter2 counter1))
(and (<= counter1 0) (<= counter2 0))
(and (<= counter1 0) (<= 0 counter1))
(and (<= counter1 0) (<= (+ counter2 (* (- 1) counter1)) 1))
(and (<= counter2 counter1) (<= counter1 counter2))
(and (<= counter2 0) (<= counter1 1))
(and (<= (+ counter2 (* (- 1) counter1)) (- 1)) (<= (- 1) (+ counter2 (* (- 1) counter1))))
)

(assume (= i1 0))
(assume (= i2 0))
(assume (= counter1 0))
(assume (= j1 0))
(assume (= j2 0))
(assume (= counter2 0))
(assume (= N1 M1))
(assume (= N2 M2))

(par
  (while (< i1 N1)
    (atomic
      (set! counter1 (+ counter1 1))
      (set! i1 (+ i1 1))))
  (while (< i2 N2)
    (atomic
      (assume (< 0 counter1))
      (set! counter1 (- counter1 1))
      (set! i2 (+ i2 1))))
  (while (< j1 M1)
    (atomic
      (set! counter2 (+ counter2 1))
      (set! j1 (+ j1 1))))
  (while (< j2 M2)
    (atomic
      (assume (< 0 counter2))
      (set! counter2 (- counter2 1))
      (set! j2 (+ j2 1)))))

(assume (not (= counter1 counter2)))
