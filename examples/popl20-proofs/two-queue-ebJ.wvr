; -m total-progress-context-opt -b rr
(var q1 (Int) Int)
(var q1-front q1-back Int)
(var q2 (Int) Int)
(var q2-front q2-back Int)
(var i j N Int)
(use
false
true
(<= N j)
(<= i j)
(<= i (q2 q2-front))
(<= j i)
(<= q1-back q1-front)
(<= q1-front q1-back)
(<= q2-back q2-front)
(<= q2-front q2-back)
(<= (q1 q1-front) (q2 q2-front))
(<= (+ j (* (- 1) N)) (- 1))
(<= (+ q1-front (* (- 1) q1-back)) (- 1))
(<= (+ q2-front (* (- 1) q2-back)) (- 1))
(<= (+ q2-front (* (- 1) q2-back)) (- 2))
(<= (- 1) (+ j (* (- 1) i)))
(<= (- 1) (+ q1-front (* (- 1) q1-back)))
(<= (- 1) (+ q2-front (* (- 1) q2-back)))
(= i j)
(and (<= i N) (<= j N))
(and (<= i j) (<= j i))
(and (<= j i) (<= i N))
(and (<= j i) (<= i j))
(and (<= q1-back q1-front) (<= (- 1) (+ q2-front (* (- 1) q2-back))))
(and (<= q2-back q2-front) (<= q1-back q1-front))
(and (<= 1 (+ N (* (- 1) i))) (<= 1 (+ N (* (- 1) j))))
(and (<= 1 (+ N (* (- 1) j))) (<= i N))
(and (<= 1 (+ N (* (- 1) (q2 q2-front)))) (<= 1 (+ N (* (- 1) i))))
(and (<= 1 (+ N (* (- 1) (q2 q2-front)))) (<= 1 (+ N (* (- 1) (q1 q1-front)))))
(and (<= (- 1) (+ q1-front (* (- 1) q1-back))) (<= (- 1) (+ q2-front (* (- 1) q2-back))))
(and (<= (- 1) (+ q2-front (* (- 1) q2-back))) (or (<= (+ q1-back (* (- 1) q1-front)) (- 1)) (= q1-back q1-front)))
(and (= q1-front q1-back) (<= j (q2 q2-front)))
(and (= q1-front q1-back) (= q2-front q2-back))
(and (= q1-front q1-back) (and (= q2-front q2-back) (<= (+ i (* (- 1) N)) (- 1))))
(and (= q2-front q2-back) (and (= q1-front q1-back) (<= j i)))
(and (and (= q1-front q1-back) (<= (+ j (* (- 1) N)) (- 1))) (<= 1 (+ N (* (- 1) (q2 q2-front)))))
(and (and (= q2-front q2-back) (<= (+ i (* (- 1) N)) (- 1))) (and (= q1-front q1-back) (<= (+ j (* (- 1) N)) (- 1))))
(or (<= q1-back q1-front) (and (<= 1 (+ N (* (- 1) (q2 q2-front)))) (<= 1 (+ N (* (- 1) (q1 q1-front))))))
(or (<= (+ q1-back (* (- 1) q1-front)) (- 1)) (and (= q1-back q1-front) (= q2-front q2-back)))
(or (<= (+ q1-back (* (- 1) q1-front)) (- 1)) (and (= q1-back q1-front) (and (= q2-front q2-back) (<= 1 (+ N (* (- 1) i))))))
(or (<= (+ q1-back (* (- 1) q1-front)) (- 1)) (and (and (= q1-back q1-front) (<= 1 (+ N (* (- 1) j)))) (<= 1 (+ N (* (- 1) (q2 q2-front))))))
(or (<= (+ q1-back (* (- 1) q1-front)) (- 1)) (and (and (= q2-front q2-back) (<= 1 (+ N (* (- 1) i)))) (and (= q1-back q1-front) (<= 1 (+ N (* (- 1) j))))))
)

(assume (and
  (= i j 0)
  (= q1-front q1-back)
  (= q2-front q2-back)))

(par
  (while (< i N)
    (atomic
      (assume (= (q2 q2-back) i))
      (set! q2-back (+ q2-back 1)))
    (atomic
      (assume (> q1-back q1-front))
      (set! i (q1 q1-front))
      (set! q1-front (+ q1-front 1)))
    (set! i (+ i 1)))
  (while (< j N)
    (atomic
      (assume (= (q1 q1-back) j))
      (set! q1-back (+ q1-back 1)))
    (atomic
      (assume (> q2-back q2-front))
      (set! j (q2 q2-front))
      (set! q2-front (+ q2-front 1)))
    (set! j (+ j 1))))

(assume (not (= i j)))
