(var n!0 () Int)
(var i!1 () Int)
(var f1!2 () Int)
(var f2!3 () Int)
(var l!4 () Int)
(var i!5 () Int)
(var f1!6 () Int)
(var f2!7 () Int)
(var l!8 () Int)
;(use
;  (and (= f1!2 f1!6)
;       (= f2!3 f2!7))
;  (and (= i!5 0)
;       (= f1!2 f1!6)
;       (= f2!3 f2!7))
;  (and (= i!5 i!1)
;       (= f1!2 f1!6)
;       (= f2!3 f2!7))
;  (and (< i!5 n!0)
;       (= i!1 (+ i!5 1))
;       (= f1!2 (+ f1!6 f2!7))
;       (= f2!3 f1!6))
;  (and (= l!4 (if (> f1!2 0) 1 0))
;       (= i!5 i!1)
;       (= f1!2 f1!6)
;       (= f2!3 f2!7))
;  (and (= l!4 l!8)
;       (= i!5 i!1)
;       (= f1!2 f1!6)
;       (= f2!3 f2!7))
;  (and (= i!5 i!1)
;       (>= i!1 n!0)))
(assume (and (= f1!2 f1!6) (= f2!3 f2!7)))
(par
  (seq
    (set! i!1 0)
    (loop
      (atomic (assume (< i!1 n!0))
              (set! f1!2 (+ f1!2 f2!3))
              (set! f2!3 (- f1!2 f2!3))
              (set! i!1 (+ i!1 1))))
    (atomic (assume (>= i!1 n!0))
            (set! l!4 (if (> f1!2 0) 1 0))))
  (seq
    (set! i!5 0)
    (loop
      (atomic (assume (< i!5 n!0))
              (set! f1!6 (+ f1!6 f2!7))
              (set! f2!7 (- f1!6 f2!7))
              (set! i!5 (+ i!5 1))))
    (atomic (assume (>= i!5 n!0))
            (set! l!8 (if (> f1!6 0) 1 0)))))
(assume (not (= l!4 l!8)))
