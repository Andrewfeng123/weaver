(var res1 res2 i1 i2 j1 j2 k1 k2 N M Int)
(var A B (Int) Int)

(assume (<= 0 M))
(assume (< M N))
(assume (= i1 j1 res1 res2 0))
(assume (= k1 M))

(par
    (while (< i1 N)
        (set! i2 0)
        (while (< i2 (A i1))
            (set! res1 (+ res1 (B i1)))
            (set! i2 (+ i2 1)))
        (set! i1 (+ i1 1)))
    (while (< j1 M)
        (set! j2 0)
        (while (< j2 (A j1))
            (set! res2 (+ res2 (B j1)))
            (set! j2 (+ j2 1)))
        (set! j1 (+ j1 1)))
    (while (< k1 N)
        (set! k2 0)
        (while (< k2 (A k1))
            (set! res2 (+ res2 (B k1)))
            (set! k2 (+ k2 1)))
        (set! k1 (+ k1 1))))

(assume (not (= res1 res2)))
