(var min1 min2 i j k N M Int)
(var A (Int) Int)


(assume (<= 0 M))
(assume (< M N))
(assume (= i j min1 min2 0))
(assume (= k M))

(par
    (while (< i N)
        (atomic
        (set! min1 (if (> min1 (A i)) (A i) min1))
        (set! i (+ i 1))))
    (while (< j M)
        (atomic
        (set! min2 (if (> min2 (A j)) (A j) min2))
        (set! j (+ j 1))))
    (while (< k N)
        (atomic
        (set! min2 (if (> min2 (A k)) (A k) min2))
        (set! k (+ k 1)))))

(assume (not (= min1 min2) ))
