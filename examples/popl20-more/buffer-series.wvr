(var i j total N Int)
(var q1 q2 f (Int) Int)
(var q1-front q1-back q2-front q2-back Int)

(assume (and
    (>= N 0)
    (= q1-front q1-back)
    (= q2-front q2-back)
    (= total 0)
    (= i 0)
    (= j 0)))

(par
    (while (< i N)
        (atomic
            (assume (= (q1 q1-back) (f i)))
            (set! q1-back (+ q1-back 1)))
        (set! i (+ i 1)))
    (while (< j N)
        (atomic
            (assume (= (q2 q2-back) (- (f j))))
            (set! q2-back (+ q2-back 1)))
        (set! j (+ j 1)))
    (while (or (< i N) (< q1-front q1-back))
        (atomic
            (assume (< q1-front q1-back))
            (set! total (+ total (q1 q1-front)))
            (set! q1-front (+ q1-front 1))))
    (while (or (< j N) (< q2-front q2-back))
        (atomic
            (assume (< q2-front q2-back))
            (set! total (+ total (q2 q2-front)))
            (set! q2-front (+ q2-front 1)))))

(assume (not (= total 0)))
