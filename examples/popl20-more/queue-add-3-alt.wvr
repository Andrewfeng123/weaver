(var q1 (Int) Int)
(var q1-front q1-back Int)
(var q2 (Int) Int)
(var q2-front q2-back Int)
(var i j k s t x y z N C Int)
(var f g Bool)

(assume (and
  (= x y z 0)
  (= q1-front q1-back)
  (= q2-front q2-back)
  (>= N 0)))

(par
  (seq
    (set! i 0)
    (while (< i N)
      (atomic
        (assume (= (q1 q1-back) 1))
        (set! q1-back (+ q1-back 1)))
      (set! x (+ x C))
      (set! i (+ i 1)))
    (atomic
      (assume (= (q1 q1-back) 0))
      (set! q1-back (+ q1-back 1)))
          (set! x (+ x C)))

  (seq
    (set! s 0)
    (set! f true)
    (while f
      (atomic
        (assume (> q1-back q1-front))
        (set! j (q1 q1-front))
        (set! q1-front (+ q1-front 1)))
      (atomic
        (assume (= (q2 q2-back) j))
        (set! q2-back (+ q2-back 1)))
      (set! s (+ s j))
      (set! y (+ y C))
      (set! f (/= j 0))))

  (seq
    (set! t 0)
    (set! g true)
    (while g
      (atomic
        (assume (> q2-back q2-front))
        (set! k (q2 q2-front))
        (set! q2-front (+ q2-front 1)))
      (set! t (+ t k))
      (set! z (+ z C))
      (set! g (/= k 0)))))

(assume (not (and (= x y z) (= t N))))
