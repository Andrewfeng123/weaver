(var pos c1 c2 Int)
(var assert Bool)

;(use
;  (and (= pos (+ c1 c2)) (>= c1 0) (>= c2 0))
;  assert)

(assume (and
  (= pos c1 c2 0)
  (= assert true)))

(par
  (while assert
    (cond
      (atomic
        (set! pos (+ pos 1))
        (set! c1 (+ c1 1)))
      (atomic
        (assume (> c1 0))
        (set! pos (- pos 1))
        (set! c1 (- c1 1)))))
  (while assert
    (cond
      (atomic
        (set! pos (+ pos 1))
        (set! c2 (+ c2 1)))
      (atomic
        (assume (> c2 0))
        (set! pos (- pos 1))
        (set! c2 (- c2 1)))))
  (set! assert (>= pos 0)))
