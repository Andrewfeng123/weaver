(var e1 e2 Bool)
(var n1 n2 tmp1 tmp2 Int)
(var f (Int) Int)
(var i j i1 i2 Int)

(assume (= i j))
(set! e1 false)
(set! e2 false)
(set! n1 0)
(set! n2 0)

(par (seq (set! e1 true)
          (set! tmp1 n2)
          (set! n1 (+ tmp1 1))
          (set! e1 false)

          (assume (not e2))
          (assume (or (= n2 0) (>= n2 n1)))

          (set! i1 i)
          (set! i (f i1))

          (set! n1 0))

     (seq (set! e2 true)
          (set! tmp2 n1)
          (set! n2 (+ tmp2 1))
          (set! e2 false)

          (assume (not e1))
          (assume (or (= n1 0) (> n1 n2)))

          (set! i2 i)
          (set! i (f i2))

          (set! n2 0))
     (seq (set! j (f j))
          (set! j (f j))))

(assume (not (= i j)))
