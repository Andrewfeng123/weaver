(var o!0 (Int) Int)
(var isNull!1 () Bool)
(var o!2 (Int) Int)
(var isNull!3 () Bool)
(var o!4 (Int) Int)
(var isNull!5 () Bool)
(var break!6 () Bool)
(var result!7 () Int)
(var i!8 () Int)
(var break!9 () Bool)
(var result!10 () Int)
(var i!11 () Int)
(var break!12 () Bool)
(var result!13 () Int)
(var i!14 () Int)
(par
  (seq
    (atomic (assume (not isNull!1))
            (set! break!6 isNull!3)
            (set! result!7 1)
            (set! i!8 0))
    (loop
      (atomic (assume (not break!6))
              (assume (< i!8 5))
              (set! result!7 (- (o!0 i!8) (o!2 i!8)))
              (set! break!6 (/= result!7 0))
              (set! i!8 (+ i!8 1))))
    (atomic (assume (or break!6 (>= i!8 5)))
            (set! result!7 (if break!6 result!7 0))))
  (seq
    (atomic (assume (not isNull!1))
            (set! break!9 isNull!5)
            (set! result!10 1)
            (set! i!11 0))
    (loop
      (atomic (assume (not break!9))
              (assume (< i!11 5))
              (set! result!10 (- (o!0 i!11) (o!4 i!11)))
              (set! break!9 (/= result!10 0))
              (set! i!11 (+ i!11 1))))
    (atomic (assume (or break!9 (>= i!11 5)))
            (set! result!10 (if break!9 result!10 0))))
  (seq
    (atomic (assume (not isNull!3))
            (set! break!12 isNull!5)
            (set! result!13 1)
            (set! i!14 0))
    (loop
      (atomic (assume (not break!12))
              (assume (< i!14 5))
              (set! result!13 (- (o!2 i!14) (o!4 i!14)))
              (set! break!12 (/= result!13 0))
              (set! i!14 (+ i!14 1))))
    (atomic (assume (or break!12 (>= i!14 5)))
            (set! result!13 (if break!12 result!13 0)))))
(assume (not (=> (= result!7 0) (and (= (> result!10 0) (> result!13 0)) (= (< result!10 0) (< result!13 0))))))