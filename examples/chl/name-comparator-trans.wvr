(var nondet!0 (Int) Int)
(var name!1 () Int)
(var name!2 () Int)
(var name!3 () Int)
(var result!4 () Int)
(var i!5 () Int)
(var current!6 () Int)
(var break!7 () Bool)
(var result!8 () Int)
(var i!9 () Int)
(var current!10 () Int)
(var break!11 () Bool)
(var result!12 () Int)
(var i!13 () Int)
(var current!14 () Int)
(var break!15 () Bool)
(par
  (seq
    (atomic (set! i!5 0)
            (set! break!7 false)
            (set! result!4 (if (= name!1 name!2) 0 result!4))
            (set! break!7 (if (= name!1 name!2) true break!7)))
    (loop
      (atomic (assume (and (< i!5 3) (not break!7)))
              (set! current!6 (nondet!0 i!5))
              (set! result!4 (if (= current!6 name!1) 1 result!4))
              (set! break!7 (if (= current!6 name!1) true break!7))
              (set! result!4 (if (and (not break!7) (= current!6 name!2)) (- 0 1) result!4))
              (set! break!7 (if (and (not break!7) (= current!6 name!2)) true break!7))
              (set! i!5 (+ i!5 1))))
    (atomic (assume (not (and (< i!5 3) (not break!7))))
            (set! result!4 (if (not break!7) (- name!1 name!2) result!4))))
  (seq
    (atomic (set! i!9 0)
            (set! break!11 false)
            (set! result!8 (if (= name!2 name!3) 0 result!8))
            (set! break!11 (if (= name!2 name!3) true break!11)))
    (loop
      (atomic (assume (and (< i!9 3) (not break!11)))
              (set! current!10 (nondet!0 i!9))
              (set! result!8 (if (= current!10 name!2) 1 result!8))
              (set! break!11 (if (= current!10 name!2) true break!11))
              (set! result!8 (if (and (not break!11) (= current!10 name!3)) (- 0 1) result!8))
              (set! break!11 (if (and (not break!11) (= current!10 name!3)) true break!11))
              (set! i!9 (+ i!9 1))))
    (atomic (assume (not (and (< i!9 3) (not break!11))))
            (set! result!8 (if (not break!11) (- name!2 name!3) result!8))))
  (seq
    (atomic (set! i!13 0)
            (set! break!15 false)
            (set! result!12 (if (= name!1 name!3) 0 result!12))
            (set! break!15 (if (= name!1 name!3) true break!15)))
    (loop
      (atomic (assume (and (< i!13 3) (not break!15)))
              (set! current!14 (nondet!0 i!13))
              (set! result!12 (if (= current!14 name!1) 1 result!12))
              (set! break!15 (if (= current!14 name!1) true break!15))
              (set! result!12 (if (and (not break!15) (= current!14 name!3)) (- 0 1) result!12))
              (set! break!15 (if (and (not break!15) (= current!14 name!3)) true break!15))
              (set! i!13 (+ i!13 1))))
    (atomic (assume (not (and (< i!13 3) (not break!15))))
            (set! result!12 (if (not break!15) (- name!1 name!3) result!12)))))
(assume (not (=> (and (> result!4 0) (> result!8 0)) (> result!12 0))))