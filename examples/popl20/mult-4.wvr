(var i1 i2 N1 N2 counter Int)
(var j1 j2 M1 M2 Int)
(var C Int)

(assume (= i1 i2 j1 j2 0))
(assume (= counter 0))
(assume (= N1 N2 M1 M2))
(assume (< 0 C))

(par
  (while (< i1 N1)
    (atomic
      (set! counter (+ counter C))
      (set! i1 (+ i1 1))))
  (while (< i2 N2)
    (atomic
      (assume (< 0 counter))
      (set! counter (- counter C))
      (set! i2 (+ i2 1))))
  (while (< j1 M1)
    (atomic
      (set! counter (+ counter C))
      (set! j1 (+ j1 1))))
  (while (< j2 M2)
    (atomic
      (assume (< 0 counter))
      (set! counter (- counter C))
      (set! j2 (+ j2 1)))))

(assume (not (= counter 0)))

