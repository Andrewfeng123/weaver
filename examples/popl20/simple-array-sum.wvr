(var A (Array Int Int))
(var C (Array Int Int))

(var asum csum p i k l N Int)

(assume (= i k l p asum csum 0))
(assume (<= 0 N))

(par
  (while (< i N)
    (atomic
      (set! asum (+ asum (select A i)))
      (set! i (+ i 1))))
  (while (< k N)
    (atomic
      (store! C k (+ (select A k) 1))
      (set! k (+ k 1))
      (set! p k)))
  (while (< l N)
    (if (< l p)
      (atomic
        (set! csum (+ csum (select C l)))
        (set! l (+ l 1))))))

(assume (not (= csum (+ asum N))))
